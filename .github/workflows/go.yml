# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GIN_MODE: release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Test coverage
      run: |
        go test -v ./... -cover -covermode=count -coverprofile=coverage.out  | tee test_output.txt
        go tool cover -func=coverage.out | bash scripts/coverage.sh > coverage.txt
        go tool cover -html=coverage.out -o coverage.html

    - name: Comment Coverage
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const coverage = fs.readFileSync('coverage.txt', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: coverage
          });

    - name: Upload coverage
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage.html