# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GIN_MODE: release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Test coverage
      run: |
        go test -v ./... -cover -covermode=count -coverprofile=coverage.out  | tee test_output.txt
        go tool cover -func=coverage.out | awk '/total/ {print "| **" $$1 "** | **" $$3 "** |"}' | tee coverage.txt
        cat test_output.txt | grep 'ok.*coverage' | awk '{print "| " $$2 " | " $$5 " |"}' | tee -a coverage.txt
        echo "## Test Coverage Report" > coverage_with_header.txt
        echo "| Package           | Coverage |" >> coverage_with_header.txt
        echo "|-------------------|----------|" >> coverage_with_header.txt
        cat coverage.txt >> coverage_with_header.txt
        mv coverage_with_header.txt coverage.txt
        cat coverage.txt
        rm test_output.txt

    - name: Comment coverage on PR
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.number }}
        body-path: 'coverage.txt'